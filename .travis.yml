group: edge
dist: trusty
sudo: required
language: python

env:
  global:
    # Doctr deploy key for bashtage/randomgen
    - secure: "czwFlflS1lcfbSQ9ktv+pLAPV9/6+wmwiMTyIYyv5xgQVWRL5NRebWH+ZhQ6s2T5x17wFMtlafcAvkdV0CHQZLru34V2UNldCapuEtQ8b32EDHBXHKbs45b7SSkLx4TFXdjiJurleY4ZIKle0gX6BW21zYBwaHJqbN6I8nRv9Rp47XEU1UV1Mdf/PhfTnxY31rFrPYL77xeWJzoFfT8zao39V4gQds+1Ag7FjdNVdSDVKwDduF4kS7tIbKqb4M+jsbc3PIKyP9nyQpEQF5ebJuG7mqXJhVJGEL83rBx8MLFPA/1X3cUzKacgKyp2+Wmlt0EVhwCa1aRf9cSK6I7TbMC7/eGtDnC2ToiRlFJurVRblaEmhzVQS1yQ4Dkooqsj9hNVl6nhu7JfR52GLogns33Ec/yYuRcWcULKSlR5Cerfef/5YijBEhlr9X76SJiOpjvS4lwWFYX+h8xzuVhRLGwIVB9oQNllxYItzcDSGmRx+EOMXWASHmoUDnBOZg4GMVukqOcF5l0ynoepiA1YHLdZlMy6SB3P7BZKF/aNCOn9nXw+N9X4U/yUpkM3Pb7HoGdNrC8RO4SwrNjGrarkdEB6e1lBReK/dqcylaF/mpK9VLpfQszDI8xnR4VCmlEM+le0xOsyHfeGciabdI4KH0i0SfYl4ls5XrN+CaqFWdo="
    - PYPI=false
    - COVERAGE=true
    - PIP_CYTHON=false

cache:
  directories:
  - $HOME/.cache/pip

matrix:
  fast_finish: true
  include:
    - os: linux
      env: [PYTHON=2.7]
    - os: linux
      env: [PYTHON=3.7, DOCBUILD=true]
    - os: linux
      python: 3.6
      env: [PYPI=true, COVERAGE=false]
    - os: osx
      language: generic
      env: [PYPI=true, PYTHON=3.6]
    - os: linux
      env: [PYTHON=3.6, NUMPY=1.14, CYTHON=0.27]
    - os: linux
      env: [PYTHON=3.5, NUMPY=1.13, CYTHON=0.26]


before_install:
  - git fetch --tags
  - if [[ $PYPI = true ]]; then source ci/pypi-install.sh; else source ci/conda-install.sh; fi
  - if [[ $PIP_CYTHON = true ]]; then pip install cython --upgrade; fi
  - pip install tempita coverage coveralls pytest-cov codecov coveralls -q
  - pip list
  - export BUILD_DIR=${PWD}
  - if [[ ${DOCBUILD} == true ]]; then pip install sphinx sphinx_rtd_theme guzzle_sphinx_theme ipython doctr -q; fi
  - gcc --version || true
  - clang --version || true
  - export SRCDIR="$PWD"
  - export RANDOMGEN_CYTHON_COVERAGE="$COVERAGE"
  - if [[ "$COVERAGE" == true ]]; then export COVERAGE_OPTIONS="--cov-config .coveragerc --cov=randomgen"; fi

install:
  - python setup.py develop

script:
  - set -e
  - pytest -v -r a ${COVERAGE_OPTIONS} randomgen
  - |
    if [[ ${DOCBUILD} == true ]]; then
      cd ${BUILD_DIR}/doc
      make html
      make html
      cd ${BUILD_DIR}
      doctr deploy devel --build-tags
      if [[ -z ${TRAVIS_TAG} ]]; then
        echo "Not a tagged build."
      else
        doctr deploy . --build-tags
      fi
    fi

after_success:
  - |
    if [[ ${PYPI} == true ]]; then
      cd ${BUILD_DIR}
      python benchmark.py;
    fi
  - if [[ "$COVERAGE" = true ]]; then codecov; coveralls --rcfile="$SRCDIR"/.coveragerc; fi
